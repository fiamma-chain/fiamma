syntax = "proto3";

package fiamma.zkpverify;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fiamma/zkpverify/params.proto";

option go_package = "fiamma/x/zkpverify/types";

// Query defines the gRPC querier service.
service Query {

  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/fiamma/zkpverify/params";
  }

  // Queries a list of PendingProof items.
  rpc PendingProof(QueryPendingProofRequest)
      returns (QueryPendingProofResponse) {
    option (google.api.http).get = "/fiamma/zkpverify/pending_proof";
  }

  // Queries a list of PendingProofByType items.
  rpc PendingProofByType(QueryPendingProofByTypeRequest)
      returns (QueryPendingProofByTypeResponse) {
    option (google.api.http).get = "/fiamma/zkpverify/pending_proof_by_type";
  }

  // Queries a list of AllProofTypes items.
  rpc AllProofTypes(QueryAllProofTypesRequest)
      returns (QueryAllProofTypesResponse) {
    option (google.api.http).get = "/fiamma/zkpverify/all_proof_types";
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {

  // params holds all the parameters of this module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryPendingProofRequest is request type for the Query/PendingProof RPC
// method.
message QueryPendingProofRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryPendingProofResponse is response type for the Query/PendingProof RPC
// method.
message QueryPendingProofResponse {
  string proof_id = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryPendingProofByTypeRequest is request type for the
// Query/PendingProofByType RPC method.
message QueryPendingProofByTypeRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryPendingProofByTypeResponse is response type for the
// Query/PendingProofByType RPC method.
message QueryPendingProofByTypeResponse {
  string proof_id = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryAllProofTypesRequest is request type for the Query/AllProofTypes RPC
// method.
message QueryAllProofTypesRequest {}

// QueryAllProofTypesResponse is response type for the Query/AllProofTypes RPC
// method.
message QueryAllProofTypesResponse { repeated string proof_system = 1; }


// QueryBitVMWitnessRequest is request type for the Query/BitVMWitness RPC 
// method.
message QueryBitVMWitnessRequest {
  string proof_id = 1;
}

// QueryBitVMWitnessResponse is response type for the Query/BitVMWitness RPC
// method.
message QueryBitVMWitnessResponse {
  string witness = 1;
}